datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  email        String         @unique
  password     String
  inventory    Inventory[]
  purchases    Purchase[]
  services     Service[]
  invoices     Invoice[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Inventory {
  id           Int            @id @default(autoincrement())
  name         String
  category     String
  quantity     Int
  price        Float?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  PurchaseItem PurchaseItem[]    // I'm thinking maybe these aren't necessary?
  ServiceItem  ServiceItem[]
  userId       Int
  user         User           @relation(fields: [userId], references: [id])
}

model Purchase {
  id          Int            @id @default(autoincrement())
  description String
  totalCost   Float
  category    String
  items?      PurchaseItem[]
  userId      Int
  user        User           @relation(fields: [userId], references: [id])
  createdAt   DateTime       @default(now())
}

model PurchaseItem {
  id          Int        @id @default(autoincrement())
  quantity    Int?
  price       Float
  inventoryId Int?
  inventory   Inventory? @relation(fields: [inventoryId], references: [id])
  purchaseId  Int
  purchase    Purchase   @relation(fields: [purchaseId], references: [id])
}

model Service {
  id             Int              @id @default(autoincrement())
  name           String
  description    String?
  items          ServiceItem[]
  price          Float?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  InvoiceService InvoiceService[]
  userId         Int
  user           User             @relation(fields: [userId], references: [id])
}

model ServiceItem {
  id          Int       @id @default(autoincrement())
  quantity    Int
  inventoryId Int
  inventory   Inventory @relation(fields: [inventoryId], references: [id])
  serviceId   Int
  service     Service   @relation(fields: [serviceId], references: [id])
}

model Invoice {
  id          Int              @id @default(autoincrement())
  patientName String
  services    InvoiceService[]
  totalAmount Float
  userId      Int
  user        User             @relation(fields: [userId], references: [id])
  createdAt   DateTime         @default(now())
}

model InvoiceService {
  id        Int     @id @default(autoincrement())
  quantity  Int
  serviceId Int
  service   Service @relation(fields: [serviceId], references: [id])
  invoiceId Int
  invoice   Invoice @relation(fields: [invoiceId], references: [id])
}
