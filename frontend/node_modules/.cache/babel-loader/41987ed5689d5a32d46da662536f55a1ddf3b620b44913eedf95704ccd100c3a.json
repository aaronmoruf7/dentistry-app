{"ast":null,"code":"var _jsxFileName = \"/Users/aaronmoruf/Desktop/begonia_medical/frontend/src/components/Inventory/Inventory.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Table from '../Reusable/Table.tsx';\nimport AddInventory from './AddInventory.tsx';\nimport EditInventory from './EditInventory.tsx';\nimport SidePanel from '../Reusable/Sidepanel.tsx';\nimport { useInventory } from '../SharedStates/InventoryProvider.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = 'https://begonia-medical.onrender.com';\nconst Inventory = () => {\n  _s();\n  const {\n    inventoryData,\n    setInventoryData\n  } = useInventory();\n  const [isAddPanelOpen, setisAddPanelOpen] = useState(false);\n  const [isEditPanelOpen, setisEditPanelOpen] = useState(false);\n  const [currentItem, setCurrentItem] = useState(null);\n\n  // when mounting show all inventory records\n  useEffect(() => {\n    const fetchInventoryData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`${URL}/api/inventory`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch inventory data');\n        }\n        const data = await response.json();\n        setInventoryData(data);\n      } catch (error) {\n        console.error('Error fetching inventory data', error);\n      }\n    };\n    fetchInventoryData();\n  }, []);\n\n  // functionality for creating a new inventory item\n  const handleAdd = async newItem => {\n    const newItem_ = {\n      ...newItem,\n      quantity: Number(newItem.quantity),\n      price: Number(newItem.price)\n    };\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${URL}/api/inventory`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(newItem_)\n    });\n    if (response.ok) {\n      const addedItem = await response.json();\n      setInventoryData([...inventoryData, addedItem]);\n    } else {\n      throw new Error(\"Error adding item\");\n    }\n  };\n\n  // functionality for deleting an item\n  const handleDelete = async id => {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${URL}/api/inventory/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (response.ok) {\n      setInventoryData(prevData => prevData.filter(item => item.id !== id));\n    } else {\n      console.error(\"Failed to delete item\");\n    }\n  };\n\n  // functionality for updating an item\n  const handleUpdate = async updatedItem => {\n    const {\n      id,\n      ...updatedItem_\n    } = updatedItem;\n    const token = localStorage.getItem('token');\n    console.log('Token', token);\n    const response = await fetch(`${URL}/api/inventory/${updatedItem.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(updatedItem_)\n    });\n    if (response.ok) {\n      const updatedData = await response.json();\n      setInventoryData(prevData => prevData.map(item => item.id === updatedItem.id ? updatedData : item));\n    } else {\n      throw new Error(\"Error in response\");\n    }\n  };\n\n  //define columns\n  const columns = [{\n    header: 'Item Name',\n    accessor: 'name'\n  }, {\n    header: 'Category',\n    accessor: 'category'\n  }, {\n    header: 'Quantity',\n    accessor: 'quantity'\n  }, {\n    header: 'Price/Unit',\n    accessor: 'price'\n  }, {\n    header: 'Date',\n    accessor: 'createdAt'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Inventory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setisAddPanelOpen(true),\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), \"            \", /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: inventoryData,\n      onDelete: handleDelete,\n      onEdit: item => {\n        {\n          setCurrentItem(item);\n        }\n        ;\n        setisEditPanelOpen(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(SidePanel, {\n      isOpen: isAddPanelOpen,\n      onClose: () => setisAddPanelOpen(false),\n      children: /*#__PURE__*/_jsxDEV(AddInventory, {\n        onAdd: handleAdd,\n        onClose: () => setisAddPanelOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), currentItem && /*#__PURE__*/_jsxDEV(SidePanel, {\n      isOpen: isEditPanelOpen,\n      onClose: () => setisEditPanelOpen(false),\n      children: /*#__PURE__*/_jsxDEV(EditInventory, {\n        item: currentItem,\n        onUpdate: handleUpdate,\n        onClose: () => setisEditPanelOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_s(Inventory, \"V4+h+acd6XQHEpfoPqSe31fiS2A=\", false, function () {\n  return [useInventory];\n});\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useState","useEffect","Table","AddInventory","EditInventory","SidePanel","useInventory","jsxDEV","_jsxDEV","URL","Inventory","_s","inventoryData","setInventoryData","isAddPanelOpen","setisAddPanelOpen","isEditPanelOpen","setisEditPanelOpen","currentItem","setCurrentItem","fetchInventoryData","token","localStorage","getItem","response","fetch","headers","Authorization","ok","Error","data","json","error","console","handleAdd","newItem","newItem_","quantity","Number","price","method","body","JSON","stringify","addedItem","handleDelete","id","prevData","filter","item","handleUpdate","updatedItem","updatedItem_","log","updatedData","map","columns","header","accessor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDelete","onEdit","isOpen","onClose","onAdd","onUpdate","_c","$RefreshReg$"],"sources":["/Users/aaronmoruf/Desktop/begonia_medical/frontend/src/components/Inventory/Inventory.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Table from '../Reusable/Table.tsx';\nimport AddInventory from './AddInventory.tsx';\nimport EditInventory from './EditInventory.tsx';\nimport SidePanel from '../Reusable/Sidepanel.tsx';\nimport { useInventory } from '../SharedStates/InventoryProvider.tsx'\n\nconst URL = 'https://begonia-medical.onrender.com';\n\n\nconst Inventory = () => {\n    const {inventoryData, setInventoryData} = useInventory()\n    const [isAddPanelOpen, setisAddPanelOpen] = useState(false);\n    const [isEditPanelOpen, setisEditPanelOpen] = useState(false);\n    const [currentItem, setCurrentItem] = useState(null);\n\n    // when mounting show all inventory records\n    useEffect(() => {\n        const fetchInventoryData = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                const response = await fetch(`${URL}/api/inventory`, {\n                    headers: { Authorization : `Bearer ${token}`}\n                });\n                if (!response.ok) {\n                    throw new Error ('Failed to fetch inventory data');\n                }\n                const data = await response.json();\n                setInventoryData(data);\n            } catch (error) {\n                console.error('Error fetching inventory data', error);\n            }\n        };\n        fetchInventoryData();\n    }, []);\n\n    // functionality for creating a new inventory item\n    const handleAdd = async (newItem) => {\n        const newItem_ = {\n            ... newItem,\n            quantity: Number(newItem.quantity),\n            price: Number(newItem.price)\n        }\n        const token = localStorage.getItem('token');\n        const response = await fetch (`${URL}/api/inventory`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json', \n                       'Authorization': `Bearer ${token}`},\n            body: JSON.stringify(newItem_)\n        });\n\n        if (response.ok) {\n            const addedItem = await response.json();\n            setInventoryData([...inventoryData, addedItem]);\n        }else {\n            throw new Error(\"Error adding item\")\n        }\n    }\n\n    // functionality for deleting an item\n    const handleDelete = async (id) => {\n        const token = localStorage.getItem('token');\n        const response = await fetch (`${URL}/api/inventory/${id}`, {\n            method: 'DELETE',\n            headers: {'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`},\n        });\n\n        if (response.ok) {\n            setInventoryData(prevData => prevData.filter (item => item.id !== id))\n        }else{\n            console.error (\"Failed to delete item\")\n        }\n    }\n\n\n    // functionality for updating an item\n    const handleUpdate = async (updatedItem) => {\n        const {id, ...updatedItem_} = updatedItem;\n        const token = localStorage.getItem('token');\n        console.log('Token',token);\n        const response = await fetch (`${URL}/api/inventory/${updatedItem.id}`, {\n            method: 'PUT',\n            headers: {'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`},\n            body: JSON.stringify(updatedItem_),\n        });\n        \n        if (response.ok) {\n            const updatedData = await response.json();\n            setInventoryData(prevData => \n                prevData.map (item => (item.id === updatedItem.id? updatedData: item))\n            );\n        } else {\n            throw new Error (\"Error in response\");\n        }\n    }\n\n    //define columns\n    const columns = [\n        { header: 'Item Name', accessor: 'name'},\n        { header: 'Category', accessor: 'category'},\n        { header: 'Quantity', accessor: 'quantity'},\n        { header: 'Price/Unit', accessor: 'price'},\n        { header: 'Date', accessor: 'createdAt'},\n    ];\n    \n    return (\n        <div className='table-container'>\n            <h2>Inventory</h2>\n            <div className='add-button-container'>\n                <button onClick={() => setisAddPanelOpen(true)}>Add Item</button>\n            </div>            <Table columns={columns} data={inventoryData} onDelete={handleDelete} onEdit={(item)=>{{setCurrentItem(item)};setisEditPanelOpen(true)}}/>\n            <SidePanel isOpen={isAddPanelOpen} onClose={() => setisAddPanelOpen(false)}>\n                <AddInventory onAdd = {handleAdd} onClose={() => setisAddPanelOpen(false)}/>\n            </SidePanel>\n            {currentItem && <SidePanel isOpen={isEditPanelOpen} onClose={() => setisEditPanelOpen(false)}>\n                <EditInventory item={currentItem} onUpdate = {handleUpdate} onClose={() => setisEditPanelOpen(false)}/>\n            </SidePanel>}\n\n        </div>\n    )\n};\n\nexport default Inventory;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}