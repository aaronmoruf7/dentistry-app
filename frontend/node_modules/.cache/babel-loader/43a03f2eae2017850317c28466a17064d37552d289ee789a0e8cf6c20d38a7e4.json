{"ast":null,"code":"var _jsxFileName = \"/Users/aaronmoruf/Desktop/begonia_medical/frontend/src/components/Services/Services.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Table from '../Reusable/Table.tsx';\nimport SidePanel from '../Reusable/Sidepanel.tsx';\nimport AddService from './AddService.tsx';\nimport EditService from './EditService.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = 'https://begonia-medical.onrender.com';\nconst Services = () => {\n  _s();\n  const [serviceData, setServiceData] = useState([]);\n  const [isAddPanelOpen, setisAddPanelOpen] = useState(false);\n  const [isEditPanelOpen, setisEditPanelOpen] = useState(false);\n  const [currentService, setCurrentService] = useState(null);\n\n  //when mounting fetch all service data\n  useEffect(() => {\n    const fetchServiceData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`${URL}/api/services`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch services data');\n        }\n        const data = await response.json();\n        setServiceData(data);\n      } catch (error) {\n        console.error('Error fetching services data', error);\n      }\n    };\n    fetchServiceData();\n  }, []);\n\n  //create a new service\n  const handleAdd = async newService => {\n    const newService_ = {\n      ...newService,\n      price: Number(newService.price),\n      items: newService.items || []\n    };\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${URL}/api/services`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(newService_)\n    });\n    if (response.ok) {\n      const addedService = await response.json();\n      setServiceData([...serviceData, addedService]);\n    } else {\n      throw new Error(\"Error adding service\");\n    }\n  };\n\n  //edit a service\n  const handleUpdate = async updatedService => {\n    const {\n      id,\n      ...updatedService_\n    } = updatedService;\n    const token = localStorage.getItem('token');\n    console.log('Token', token);\n    const response = await fetch(`${URL}/api/services/${updatedService.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(updatedService_)\n    });\n    if (response.ok) {\n      const updatedData = await response.json();\n      setServiceData(prevData => prevData.map(item => item.id === updatedService.id ? updatedData : item));\n    } else {\n      throw new Error(\"Error in response\");\n    }\n  };\n\n  //delete a service\n  const handleDelete = async id => {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${URL}/api/services/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (response.ok) {\n      setServiceData(prevData => prevData.filter(item => item.id !== id));\n    } else {\n      console.error(\"Failed to delete service\");\n    }\n  };\n\n  //define columns\n  const columns = [{\n    header: 'Service Name',\n    accessor: 'name'\n  }, {\n    header: 'Description',\n    accessor: 'description'\n  }, {\n    header: 'Price',\n    accessor: 'price'\n  }, {\n    header: 'Date',\n    accessor: 'createdAt'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setisAddPanelOpen(true),\n        children: \"Add Service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: serviceData,\n      onDelete: handleDelete,\n      onEdit: item => {\n        {\n          setCurrentService(item);\n        }\n        ;\n        setisEditPanelOpen(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SidePanel, {\n      isOpen: isAddPanelOpen,\n      onClose: () => setisAddPanelOpen(false),\n      children: /*#__PURE__*/_jsxDEV(AddService, {\n        onAdd: handleAdd,\n        onClose: () => setisAddPanelOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), currentService && /*#__PURE__*/_jsxDEV(SidePanel, {\n      isOpen: isEditPanelOpen,\n      onClose: () => setisEditPanelOpen(false),\n      children: /*#__PURE__*/_jsxDEV(EditService, {\n        service: currentService,\n        onUpdate: handleUpdate,\n        onClose: () => setisEditPanelOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(Services, \"BevOewSle9LBuaboFFWLN/W6k/4=\");\n_c = Services;\nexport default Services;\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["React","useState","useEffect","Table","SidePanel","AddService","EditService","jsxDEV","_jsxDEV","URL","Services","_s","serviceData","setServiceData","isAddPanelOpen","setisAddPanelOpen","isEditPanelOpen","setisEditPanelOpen","currentService","setCurrentService","fetchServiceData","token","localStorage","getItem","response","fetch","headers","Authorization","ok","Error","data","json","error","console","handleAdd","newService","newService_","price","Number","items","method","body","JSON","stringify","addedService","handleUpdate","updatedService","id","updatedService_","log","updatedData","prevData","map","item","handleDelete","filter","columns","header","accessor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDelete","onEdit","isOpen","onClose","onAdd","service","onUpdate","_c","$RefreshReg$"],"sources":["/Users/aaronmoruf/Desktop/begonia_medical/frontend/src/components/Services/Services.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Table from '../Reusable/Table.tsx';\nimport SidePanel from '../Reusable/Sidepanel.tsx';\nimport AddService from './AddService.tsx';\nimport EditService from './EditService.tsx';\n\nconst URL = 'https://begonia-medical.onrender.com';\n\nconst Services = () => {\n    const [serviceData, setServiceData] = useState<any[]>([]);\n    const [isAddPanelOpen, setisAddPanelOpen] = useState(false);\n    const [isEditPanelOpen, setisEditPanelOpen] = useState(false);\n    const [currentService, setCurrentService] = useState(null);\n\n    //when mounting fetch all service data\n    useEffect(() => {\n        const fetchServiceData = async () => {\n            try{\n                const token = localStorage.getItem('token');\n                const response = await fetch(`${URL}/api/services`, {\n                    headers: { Authorization : `Bearer ${token}`} \n                });\n                if (!response.ok) {\n                    throw new Error ('Failed to fetch services data');\n                }\n                const data = await response.json();\n                setServiceData(data);\n            }catch(error){\n                console.error('Error fetching services data', error);\n            }\n        }\n        fetchServiceData();\n    }, [])\n\n    //create a new service\n    const handleAdd = async (newService) => {\n        const newService_ = {\n            ... newService,\n            price: Number(newService.price),\n            items: newService.items || []\n        }\n        const token = localStorage.getItem('token');\n        const response = await fetch (`${URL}/api/services`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json', \n                       'Authorization': `Bearer ${token}`},\n            body: JSON.stringify(newService_)\n        });\n\n        if (response.ok) {\n            const addedService = await response.json();\n            setServiceData([...serviceData, addedService]);\n        }else {\n            throw new Error(\"Error adding service\")\n        }\n    }\n\n    //edit a service\n    const handleUpdate = async (updatedService) => {\n        const {id, ...updatedService_} = updatedService;\n        const token = localStorage.getItem('token');\n        console.log('Token',token);\n        const response = await fetch (`${URL}/api/services/${updatedService.id}`, {\n            method: 'PUT',\n            headers: {'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`},\n            body: JSON.stringify(updatedService_),\n        });\n        \n        if (response.ok) {\n            const updatedData = await response.json();\n            setServiceData(prevData => \n                prevData.map (item => (item.id === updatedService.id? updatedData: item))\n            );\n        } else {\n            throw new Error (\"Error in response\");\n        }\n    }\n\n    //delete a service\n    const handleDelete = async (id) => {\n        const token = localStorage.getItem('token');\n        const response = await fetch (`${URL}/api/services/${id}`, {\n            method: 'DELETE',\n            headers: {'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`},\n        });\n\n        if (response.ok) {\n            setServiceData(prevData => prevData.filter (item => item.id !== id))\n        }else{\n            console.error (\"Failed to delete service\")\n        }\n    }\n\n\n    //define columns\n    const columns = [\n        { header: 'Service Name', accessor: 'name'},\n        { header: 'Description', accessor: 'description'},\n        { header: 'Price', accessor: 'price'},\n        { header: 'Date', accessor: 'createdAt'},\n    ];\n\n    return(\n        <div className='table-container'>\n            <h2>Services</h2>\n            <div className='add-button-container'>\n                <button onClick={() => setisAddPanelOpen(true)}>Add Service</button>\n            </div>            \n            <Table columns={columns} data={serviceData} onDelete={handleDelete} onEdit={(item)=>{{setCurrentService(item)};setisEditPanelOpen(true)}}/>\n            <SidePanel isOpen={isAddPanelOpen} onClose={() => setisAddPanelOpen(false)}>\n                <AddService onAdd = {handleAdd} onClose={() => setisAddPanelOpen(false)}/>\n            </SidePanel>\n            {currentService && <SidePanel isOpen={isEditPanelOpen} onClose={() => setisEditPanelOpen(false)}>\n                <EditService service={currentService} onUpdate = {handleUpdate} onClose={() => setisEditPanelOpen(false)}/>\n            </SidePanel>}\n\n        </div>\n    )\n\n}\n\nexport default Services;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}