{"ast":null,"code":"var _jsxFileName = \"/Users/aaronmoruf/Desktop/begonia_medical/frontend/src/components/Purchases/Purchases.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Table from '../Reusable/Table.tsx';\nimport AddPurchase from './AddPurchase.tsx';\nimport EditPurchase from './EditPurchase.tsx';\nimport SidePanel from '../Reusable/Sidepanel.tsx';\nimport { useInventory } from '../SharedStates/InventoryProvider.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = 'https://begonia-medical.onrender.com';\nconst Purchases = () => {\n  _s();\n  const {\n    inventoryData,\n    setInventoryData\n  } = useInventory();\n  const [purchaseData, setPurchaseData] = useState([]);\n  const [isAddPanelOpen, setisAddPanelOpen] = useState(false);\n  const [isEditPanelOpen, setisEditPanelOpen] = useState(false);\n  const [currentItem, setCurrentItem] = useState(null);\n\n  // when mounting show all purchase records\n  useEffect(() => {\n    const fetchPurchaseData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        console.log('Token:', token);\n        const response = await fetch(`${URL}/api/purchases`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch purchase data');\n        }\n        const data = await response.json();\n        setPurchaseData(data);\n      } catch (error) {\n        console.error('Error fetching purchase data', error);\n      }\n    };\n    fetchPurchaseData();\n  }, []);\n\n  // functionality for creating a new purchase item\n  const handleAdd = async newPurchase => {\n    const newPurchase_ = {\n      ...newPurchase,\n      totalCost: Number(newPurchase.totalCost)\n    };\n    const token = localStorage.getItem('token');\n    // console.log('New Purchase:', newPurchase_)\n\n    const response = await fetch(`${URL}/api/purchases`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(newPurchase_)\n    });\n    if (response.ok) {\n      const addedItem = await response.json();\n      setPurchaseData([...purchaseData, addedItem]);\n      // console.log('Purchase data:',purchaseData)\n    } else {\n      throw new Error(\"Error adding purchase\");\n    }\n  };\n\n  // functionality for deleting a purchase\n  const handleDelete = async id => {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${URL}/api/purchases/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (response.ok) {\n      setPurchaseData(prevData => prevData.filter(item => item.id !== id));\n    } else {\n      console.error(\"Failed to delete item\");\n    }\n  };\n\n  // functionality for updating a purchase\n  const handleUpdate = async updatedItem => {\n    const {\n      id,\n      ...updatedItem_\n    } = updatedItem;\n    const token = localStorage.getItem('token');\n    console.log('Token', token);\n    const response = await fetch(`${URL}/api/purchases/${updatedItem.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(updatedItem_)\n    });\n    if (response.ok) {\n      const updatedData = await response.json();\n      // setPurchaseData(prevData => {\n      //     const newData = prevData.map (item => (item.id === updatedItem.id)? updatedData: item);\n      //     return newData;\n      // })\n    } else {\n      throw new Error(\"Error in response\");\n    }\n  };\n\n  //define columns\n  const columns = [{\n    header: 'Description',\n    accessor: 'description'\n  }, {\n    header: 'Category',\n    accessor: 'category'\n  }, {\n    header: 'Total Cost',\n    accessor: 'totalCost'\n  }, {\n    header: 'Items',\n    accessor: 'items'\n  }, {\n    header: 'Date',\n    accessor: 'createdAt'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Purchases\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setisAddPanelOpen(true),\n        children: \"Add Purchase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: purchaseData,\n      onDelete: handleDelete,\n      onEdit: item => {\n        {\n          setCurrentItem(item);\n        }\n        ;\n        setisEditPanelOpen(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SidePanel, {\n      isOpen: isAddPanelOpen,\n      onClose: () => setisAddPanelOpen(false),\n      children: /*#__PURE__*/_jsxDEV(AddPurchase, {\n        inventory: inventoryData,\n        onAdd: handleAdd,\n        onClose: () => setisAddPanelOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), currentItem && /*#__PURE__*/_jsxDEV(SidePanel, {\n      isOpen: isEditPanelOpen,\n      onClose: () => setisEditPanelOpen(false),\n      children: /*#__PURE__*/_jsxDEV(EditPurchase, {\n        purchase: currentItem,\n        onUpdate: handleUpdate,\n        onClose: () => setisEditPanelOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n_s(Purchases, \"acHS0EgwLt3Nz+5zK0bM6q2rMlo=\", false, function () {\n  return [useInventory];\n});\n_c = Purchases;\nexport default Purchases;\nvar _c;\n$RefreshReg$(_c, \"Purchases\");","map":{"version":3,"names":["React","useState","useEffect","Table","AddPurchase","EditPurchase","SidePanel","useInventory","jsxDEV","_jsxDEV","URL","Purchases","_s","inventoryData","setInventoryData","purchaseData","setPurchaseData","isAddPanelOpen","setisAddPanelOpen","isEditPanelOpen","setisEditPanelOpen","currentItem","setCurrentItem","fetchPurchaseData","token","localStorage","getItem","console","log","response","fetch","headers","Authorization","ok","Error","data","json","error","handleAdd","newPurchase","newPurchase_","totalCost","Number","method","body","JSON","stringify","addedItem","handleDelete","id","prevData","filter","item","handleUpdate","updatedItem","updatedItem_","updatedData","columns","header","accessor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDelete","onEdit","isOpen","onClose","inventory","onAdd","purchase","onUpdate","_c","$RefreshReg$"],"sources":["/Users/aaronmoruf/Desktop/begonia_medical/frontend/src/components/Purchases/Purchases.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Table from '../Reusable/Table.tsx';\nimport AddPurchase from './AddPurchase.tsx';\nimport EditPurchase from './EditPurchase.tsx';\nimport SidePanel from '../Reusable/Sidepanel.tsx';\nimport { useInventory } from '../SharedStates/InventoryProvider.tsx'\n\nconst URL = 'https://begonia-medical.onrender.com';\n\nconst Purchases = () => {\n    const {inventoryData, setInventoryData} = useInventory()\n    const [purchaseData, setPurchaseData] = useState<any[]>([]);\n    const [isAddPanelOpen, setisAddPanelOpen] = useState(false);\n    const [isEditPanelOpen, setisEditPanelOpen] = useState(false);\n    const [currentItem, setCurrentItem] = useState(null);\n\n    // when mounting show all purchase records\n    useEffect(() => {\n        const fetchPurchaseData = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                console.log('Token:', token);\n                const response = await fetch(`${URL}/api/purchases`, {\n                    headers: { Authorization : `Bearer ${token}`}\n                });\n                if (!response.ok) {\n                    throw new Error ('Failed to fetch purchase data');\n                }\n                const data = await response.json();\n                setPurchaseData(data);\n            } catch (error) {\n                console.error('Error fetching purchase data', error);\n            }\n        };\n        fetchPurchaseData();\n    }, []);\n\n    // functionality for creating a new purchase item\n    const handleAdd = async (newPurchase) => {\n        const newPurchase_ = {\n            ... newPurchase,\n            totalCost: Number(newPurchase.totalCost),\n        }\n        const token = localStorage.getItem('token');\n        // console.log('New Purchase:', newPurchase_)\n        \n        const response = await fetch (`${URL}/api/purchases`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json', \n                       'Authorization': `Bearer ${token}`},\n            body: JSON.stringify(newPurchase_)\n        });\n\n        if (response.ok) {\n            const addedItem = await response.json();\n            setPurchaseData([...purchaseData, addedItem]);\n            // console.log('Purchase data:',purchaseData)\n        }else {\n            throw new Error(\"Error adding purchase\")\n        }\n    }\n\n    // functionality for deleting a purchase\n    const handleDelete = async (id) => {\n        const token = localStorage.getItem('token');\n        const response = await fetch (`${URL}/api/purchases/${id}`, {\n            method: 'DELETE',\n            headers: {'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`},\n        });\n\n        if (response.ok) {\n            setPurchaseData(prevData => prevData.filter (item => item.id !== id))\n        }else{\n            console.error (\"Failed to delete item\")\n        }\n    }\n\n\n    // functionality for updating a purchase\n    const handleUpdate = async (updatedItem) => {\n        const {id, ...updatedItem_} = updatedItem;\n        const token = localStorage.getItem('token');\n        console.log('Token',token);\n        const response = await fetch (`${URL}/api/purchases/${updatedItem.id}`, {\n            method: 'PUT',\n            headers: {'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`},\n            body: JSON.stringify(updatedItem_),\n        });\n        \n        if (response.ok) {\n            const updatedData = await response.json();\n            // setPurchaseData(prevData => {\n            //     const newData = prevData.map (item => (item.id === updatedItem.id)? updatedData: item);\n            //     return newData;\n            // })\n        } else {\n            throw new Error (\"Error in response\");\n        }\n    }\n\n    //define columns\n    const columns = [\n        { header: 'Description', accessor: 'description'},\n        { header: 'Category', accessor: 'category'},\n        { header: 'Total Cost', accessor: 'totalCost'},\n        { header: 'Items', accessor: 'items'},\n        { header: 'Date', accessor: 'createdAt'},\n        \n    ];\n    \n    return (\n        <div className='table-container'>\n            <h2>Purchases</h2>\n            <div className='add-button-container'>\n                <button onClick={() => setisAddPanelOpen(true)}>Add Purchase</button>\n            </div>\n            <Table columns={columns} data={purchaseData} onDelete={handleDelete} onEdit={(item)=>{{setCurrentItem(item)};setisEditPanelOpen(true)}}/>\n            <SidePanel isOpen={isAddPanelOpen} onClose={() => setisAddPanelOpen(false)}>\n                <AddPurchase inventory={inventoryData} onAdd = {handleAdd} onClose={() => setisAddPanelOpen(false)}/>\n            </SidePanel>\n            {currentItem && <SidePanel isOpen={isEditPanelOpen} onClose={() => setisEditPanelOpen(false)}>\n                <EditPurchase purchase={currentItem} onUpdate = {handleUpdate} onClose={() => setisEditPanelOpen(false)}/>\n            </SidePanel>}\n\n        </div>\n    )\n};\n\nexport default Purchases;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}